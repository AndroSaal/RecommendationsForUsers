swagger: "2.0"

info:
  version: 1.0.0
  title: User API
  description: |
    API Для управлениея продуктами
    Основыне функции: добавление, обновление, удаление
host: localhost:8080
schemes:
- http

paths:

  /product:
    post:
      summary: Добавление нового продутка
      description: |
        Эндпойнт заносит информацию о новом продукте, возвращает в случае успеха (200)
        id этого продукта, в случае ошибки объяснение что пошло не так
      operationId: addNewProduct
      parameters:
        - name: productInfo
          in: body
          schema:
            $ref: "#/definitions/productInfo"
          description: Информация о добавляемом продукте
          required: true
      responses:
        "200": 
          description: добавление произошло успешно, возвращается productId
          schema:
            type: object
            description: Используется для возвращения ошибки пользователю
            properties:
             userId:
              $ref: "#/definitions/productId"
        "400":
          description: Неверный формат запроса или его параметры.
          schema:
            $ref: "#/definitions/errorResponse"
        "500":
          description: Ошибка сервера.
          schema:
            $ref: "#/definitions/errorResponse"

  /product/{productId}:
    patch:
      summary: Обновление существующего продукта
      description: |
        Эндпойнт обновления информации о существующем продукте, возвращает "OK" в случае успеха (код 200), 
        либо ошибку иинформацию о ней
      operationId: updateProduct
      parameters:
        - name: productId
          required: true
          in: path
          type: integer
          description: Уникальный id продукта
        - name: productInfo
          in: body
          schema:
            $ref: "#/definitions/productInfo"
          description: Информация о добавляемом продукте
          required: true
      responses:
        "200": 
          description: добавление произошло успешно, возвращается productId
          schema:
            $ref: "#/definitions/OKresponse"
        "400":
          description: Неверный формат запроса или его параметры.
          schema:
            $ref: "#/definitions/errorResponse"
        "404":
          description: Подукт не найден - не существует или введен некоректно.
          schema:
            $ref: "#/definitions/errorResponse"
        "500":
          description: Ошибка сервера.
          schema:
            $ref: "#/definitions/errorResponse"
    delete:
      summary: Удаление существующего продукта
      description: |
        Эндпойнт для удаления существующего продукта по его id, возварщает либо "OK" в случае успеха (код 200),
        либо описание ошибки
      operationId: deleteProduct
      parameters:
        - name: productId
          required: true
          in: path
          type: integer
          description: Уникальный id продукта
      responses:
        "200": 
          description: удаление существующего продукта
          schema:
            $ref: "#/definitions/OKresponse"
        "400":
          description: Неверный формат запроса или его параметры.
          schema:
            $ref: "#/definitions/errorResponse"
        "404":
          description: Пользователь не найден - не существует или введен некоректно.
          schema:
            $ref: "#/definitions/errorResponse"
        "500":
          description: Ошибка сервера.
          schema:
            $ref: "#/definitions/errorResponse"
            
definitions:

  OKresponse:
    type: string
    example: OK

  productInfo:
    type: object
    description: Информация о продукте
    properties:
      category:
        type: string
        description: категория продукта
        maxLength: 32
        minLength: 1
        example: Видео
      description:
        type: string
        description: Описание продукта
        maxLength: 255
        minLength: 1
      status:
        type: string
        example: avalible
        enum:
          - avalible
          - non-avalible
      productKeyWords:
        type: array
        items:  
          $ref: "#/definitions/productKeyWord"
  
  productKeyWord:
    type: string

    description: Киворд продукта, по которым пользователь ищет рекомендации


  productId:
    type: integer
    description: Уникальный id продукта
    example: 0

  errorResponse:
      type: object
      description: Используется для возвращения ошибки пользователю
      properties:
        reason:
          type: string
          description: Описание ошибки в свободной форме
          minLength: 5
      required:
        - reason
      example:
        reason: Объяснение, почему запрос пользователя не может быть обработан
        
      